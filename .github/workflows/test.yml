name: Test / CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17"
      - uses: actions/setup-node@v3
        name: Setup NodeJS
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: "8.13"
      - name: Generate Test Coverage Report
        run: gradle clean jvmTest jacocoTestReport
        if: always() # always run even if the previous step fails
        continue-on-error: true
        env:
          kite9.logging: OFF
      - name: Debug Coverage Files
        run: |
          echo "=== Looking for coverage files with sizes ==="
          find . -name "*.xml" -path "*/jacoco/*" 2>/dev/null -exec ls -lh {} \; | head -20 || echo "No jacoco XML files found"
          echo "=== Looking for any XML files in build directories with sizes ==="
          find . -name "*.xml" -path "*/build/*" 2>/dev/null -exec ls -lh {} \; | head -20 || echo "No build XML files found"
          echo "=== Looking for jacocoTestReport files with sizes ==="
          find . -name "*jacocoTestReport*" 2>/dev/null -exec ls -lh {} \; | head -20 || echo "No jacocoTestReport files found"
          echo "=== Looking for execution data files with sizes ==="
          find . -name "*.exec" 2>/dev/null -exec ls -lh {} \; | head -20 || echo "No .exec files found"
        if: always()
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            **/build/reports/jacoco/**/*
            **/build/jacoco/**/*
            **/jacocoTestReport.*
          retention-days: 30
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "**/TEST-*.xml"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: always() # always run even if the previous step fails
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./**/build/reports/jacoco/**/*.xml
          verbose: true
